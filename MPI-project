#include "mpi.h"
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <time.h>
#define NUMSTEPS 1000000

int main( int argc, char *argv[]) {
    MPI_Init(&argc, &argv);
    
    int world_size;
    MPI_Comm_size(MPI_COMM_WORLD, &world_size);
    
    int world_rank;
    MPI_Comm_rank(MPI_COMM_WORLD, &world_rank);
    
    int name_len;
    char processor_name[MPI_MAX_PROCESSOR_NAME];
    MPI_Get_processor_name(processor_name, &name_len);
    
    int i;
    double x, pi, sum = 0.0;
    struct timespec start, end;

    clock_gettime(CLOCK_MONOTONIC, &start);
    double step = 1.0/(double) NUMSTEPS;
    x = 0.5 * step;

    for (i=0;i<= NUMSTEPS; i++){
            x+=step;
            sum += 4.0/(1.0+x*x);
    }
    pi = step * sum;
    clock_gettime(CLOCK_MONOTONIC, &end);
    u_int64_t diff = 1000000000L * (end.tv_sec - start.tv_sec) + end.tv_nsec - start.tv_nsec;

    printf("PI is %.20f\n",pi);
    printf("elapsed time = %llu nanoseconds\n", (long long unsigned int) diff);
    
    MPI_Finalize();
    return 0;
}
